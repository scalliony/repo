default:
  @just --list --unsorted

# Run client
run *args: (run-dev "-r" args)
# Run client (dev)
run-dev *args:
  cargo run -p scalliony-client {{args}}
# Build client
build *args: (build-dev "-r" args)
# Build client (dev)
build-dev *args:
  cargo build -p scalliony-client {{args}}
_build-z-abort *args:
  cargo +nightly build -p scalliony-client -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort {{args}}

# Run client (wasm) in browser
run-web *args: (build-web args) (_installed "basic-http-server")
  basic-http-server dist
# Build client (wasm)
build-web *args: (build target_wasm args) (_wasm-opt out_wasm out_wasm_opt) (_bundle out_wasm_opt)
_wasm-opt in out:
  @PATH=$PATH:../target command -v wasm-opt || (echo "Downloading wasm-opt..." && \
  wget -qO- https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz | \
  tar -xz -C ../target --xform='s,.*/,,' binaryen-version_110/bin/wasm-opt)
  PATH=$PATH:../target wasm-opt -Os --strip {{in}} -o {{out}}
# Build client (wasm, no backtrace)
build-web-abort *args: (_build-z-abort "-r" target_wasm args) _bundle
# Build client (wasm, dev)
build-web-dev *args: (build-dev target_wasm args) _bundle
target_wasm := "--target wasm32-unknown-unknown"
out_wasm := "../target/wasm32-unknown-unknown/release/scalliony-client.wasm"
out_wasm_opt := "../target/wasm32-unknown-unknown/release/scalliony-client.opt.wasm"

# Run client (.exe, dev) usefull in wsl
run-win-dev *args: (run-dev "--target x86_64-pc-windows-gnu" args)

@_bundle wasm=out_wasm:
  mkdir -p dist
  cp src/index.html dist
  MQ_V=$(cargo metadata --format-version=1 | jq -r '.packages[] | select(.name == "macroquad") .version'); \
  MQ_M=$(cargo metadata --format-version=1 | jq -r '.packages[] | select(.name == "macroquad") .manifest_path'); \
  cp $(dirname $MQ_M)/js/mq_js_bundle.js dist/bundle.$MQ_V.js; \
  sed -i "s/{js}/bundle.$MQ_V.js/g" dist/index.html
  WM_V=$(md5sum {{wasm}} | head -c8); \
  cp {{wasm}} dist/game.$WM_V.wasm; \
  sed -i "s/{wasm}/game.$WM_V.wasm/g" dist/index.html
_installed crate:
  @command -v {{crate}} || cargo install {{crate}} --locked
